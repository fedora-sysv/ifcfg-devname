# Original source code: https://github.com/BamPeers/rust-ci-github-actions-workflow/blob/main/.github/workflows/test.yaml

on:
  pull_request:
  push:
    branches:
      - main

name: Build and Test Coverage
env:
  PROJECT_NAME_UNDERSCORE: ifcfg_devname
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
  RUSTDOCFLAGS: -Cpanic=abort
  CACHE_NAME: cache-dependencies

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Compile ifcfg-devname
        run: cargo build

      # improve performace of workflow
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}

  unit-test-coverage:
    name: Unit test coverage
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # improve performace of workflow
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}

      # use cargo test --bins to run only unit tests
      - name: Generate test result and coverage report
        run: |
          cargo install cargo2junit grcov;
          cargo test --bins $CARGO_OPTIONS -- -Z unstable-options --format json | cargo2junit > results.xml;
          zip -0 ccov.zip `find . \( -name "$PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
          grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" --ignore "tests/*" -o lcov.info;

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v1
        with:
          files: ./lcov.info
          flags: unit
          fail_ci_if_error: false

  integration-test-coverage:
    name: Integration test coverage
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      # improve performace of workflow
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            target
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('Cargo.lock') }}

      # run only integration_test
      - name: unit - Generate test result and coverage report
        run: |
          cargo install cargo2junit grcov;
          cargo test integration_test $CARGO_OPTIONS -- -Z unstable-options --format json | cargo2junit > results.xml;
          zip -0 ccov.zip `find . \( -name "$PROJECT_NAME_UNDERSCORE*.gc*" \) -print`;
          grcov ccov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" --ignore "tests/*" -o lcov.info;

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v1
        with:
          files: ./lcov.info
          flags: integration
          fail_ci_if_error: false
